$date
	Fri Nov 26 18:45:35 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module booth_enc_r4 $end
$var wire 3 ! bin [2:0] $end
$var reg 3 " br4_out [2:0] $end
$upscope $end
$scope module booth_ppgen_r4 $end
$var wire 11 # a [10:0] $end
$var wire 3 $ br4 [2:0] $end
$var wire 1 % s $end
$var reg 12 & o [11:0] $end
$upscope $end
$scope module bsl_tb $end
$var wire 32 ' dout_sr_ref [31:0] $end
$var wire 32 ( dout_sr [31:0] $end
$var wire 32 ) dout_sl_ref [31:0] $end
$var wire 32 * dout_sl [31:0] $end
$var reg 5 + a [4:0] $end
$var reg 32 , b [31:0] $end
$scope module dul $end
$var wire 32 - din [31:0] $end
$var wire 32 . dout [31:0] $end
$var wire 1 / filler $end
$var wire 5 0 s [4:0] $end
$scope begin gen_blshift[0] $end
$upscope $end
$scope begin gen_blshift[1] $end
$upscope $end
$scope begin gen_blshift[2] $end
$upscope $end
$scope begin gen_blshift[3] $end
$upscope $end
$scope begin gen_blshift[4] $end
$upscope $end
$upscope $end
$scope module dur $end
$var wire 32 1 din [31:0] $end
$var wire 32 2 dout [31:0] $end
$var wire 1 3 filler $end
$var wire 5 4 s [4:0] $end
$scope begin gen_brshift[0] $end
$upscope $end
$scope begin gen_brshift[1] $end
$upscope $end
$scope begin gen_brshift[2] $end
$upscope $end
$scope begin gen_brshift[3] $end
$upscope $end
$scope begin gen_brshift[4] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cla_adder $end
$var wire 1 5 carry_in $end
$var wire 32 6 in1 [31:0] $end
$var wire 32 7 in2 [31:0] $end
$var wire 32 8 sum [31:0] $end
$var wire 32 9 pro [31:0] $end
$var wire 32 : gen [31:0] $end
$var wire 33 ; carry_tmp [32:0] $end
$var wire 1 < carry_out $end
$scope begin carry_generator[0] $end
$upscope $end
$scope begin carry_generator[1] $end
$upscope $end
$scope begin carry_generator[2] $end
$upscope $end
$scope begin carry_generator[3] $end
$upscope $end
$scope begin carry_generator[4] $end
$upscope $end
$scope begin carry_generator[5] $end
$upscope $end
$scope begin carry_generator[6] $end
$upscope $end
$scope begin carry_generator[7] $end
$upscope $end
$scope begin carry_generator[8] $end
$upscope $end
$scope begin carry_generator[9] $end
$upscope $end
$scope begin carry_generator[10] $end
$upscope $end
$scope begin carry_generator[11] $end
$upscope $end
$scope begin carry_generator[12] $end
$upscope $end
$scope begin carry_generator[13] $end
$upscope $end
$scope begin carry_generator[14] $end
$upscope $end
$scope begin carry_generator[15] $end
$upscope $end
$scope begin carry_generator[16] $end
$upscope $end
$scope begin carry_generator[17] $end
$upscope $end
$scope begin carry_generator[18] $end
$upscope $end
$scope begin carry_generator[19] $end
$upscope $end
$scope begin carry_generator[20] $end
$upscope $end
$scope begin carry_generator[21] $end
$upscope $end
$scope begin carry_generator[22] $end
$upscope $end
$scope begin carry_generator[23] $end
$upscope $end
$scope begin carry_generator[24] $end
$upscope $end
$scope begin carry_generator[25] $end
$upscope $end
$scope begin carry_generator[26] $end
$upscope $end
$scope begin carry_generator[27] $end
$upscope $end
$scope begin carry_generator[28] $end
$upscope $end
$scope begin carry_generator[29] $end
$upscope $end
$scope begin carry_generator[30] $end
$upscope $end
$scope begin carry_generator[31] $end
$upscope $end
$scope begin sum_without_carry[0] $end
$upscope $end
$scope begin sum_without_carry[1] $end
$upscope $end
$scope begin sum_without_carry[2] $end
$upscope $end
$scope begin sum_without_carry[3] $end
$upscope $end
$scope begin sum_without_carry[4] $end
$upscope $end
$scope begin sum_without_carry[5] $end
$upscope $end
$scope begin sum_without_carry[6] $end
$upscope $end
$scope begin sum_without_carry[7] $end
$upscope $end
$scope begin sum_without_carry[8] $end
$upscope $end
$scope begin sum_without_carry[9] $end
$upscope $end
$scope begin sum_without_carry[10] $end
$upscope $end
$scope begin sum_without_carry[11] $end
$upscope $end
$scope begin sum_without_carry[12] $end
$upscope $end
$scope begin sum_without_carry[13] $end
$upscope $end
$scope begin sum_without_carry[14] $end
$upscope $end
$scope begin sum_without_carry[15] $end
$upscope $end
$scope begin sum_without_carry[16] $end
$upscope $end
$scope begin sum_without_carry[17] $end
$upscope $end
$scope begin sum_without_carry[18] $end
$upscope $end
$scope begin sum_without_carry[19] $end
$upscope $end
$scope begin sum_without_carry[20] $end
$upscope $end
$scope begin sum_without_carry[21] $end
$upscope $end
$scope begin sum_without_carry[22] $end
$upscope $end
$scope begin sum_without_carry[23] $end
$upscope $end
$scope begin sum_without_carry[24] $end
$upscope $end
$scope begin sum_without_carry[25] $end
$upscope $end
$scope begin sum_without_carry[26] $end
$upscope $end
$scope begin sum_without_carry[27] $end
$upscope $end
$scope begin sum_without_carry[28] $end
$upscope $end
$scope begin sum_without_carry[29] $end
$upscope $end
$scope begin sum_without_carry[30] $end
$upscope $end
$scope begin sum_without_carry[31] $end
$upscope $end
$upscope $end
$scope module xchg $end
$var wire 32 = ia [31:0] $end
$var wire 32 > ib [31:0] $end
$var wire 1 ? xchg $end
$var wire 32 @ ob [31:0] $end
$var wire 32 A oa [31:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz A
bz @
z?
bz >
bz =
x<
bxz ;
bx :
bx 9
bx 8
bz 7
bz 6
z5
b0 4
03
b11011110101011011011111011101111 2
b11011110101011011011111011101111 1
b0 0
0/
b11011110101011011011111011101111 .
b11011110101011011011111011101111 -
b11011110101011011011111011101111 ,
b0 +
b11011110101011011011111011101111 *
b11011110101011011011111011101111 )
b11011110101011011011111011101111 (
b11011110101011011011111011101111 '
b0xxxxxxxxxxx &
z%
bz $
bz #
bx "
bz !
$end
#1000
b10111101010110110111110111011110 *
b10111101010110110111110111011110 .
b1101111010101101101111101110111 (
b1101111010101101101111101110111 2
b1101111010101101101111101110111 '
b10111101010110110111110111011110 )
b1 +
b1 0
b1 4
#2000
b1111010101101101111101110111100 *
b1111010101101101111101110111100 .
b110111101010110110111110111011 (
b110111101010110110111110111011 2
b110111101010110110111110111011 '
b1111010101101101111101110111100 )
b10 +
b10 0
b10 4
#3000
b11011110101011011011111011101 (
b11011110101011011011111011101 2
b11110101011011011111011101111000 *
b11110101011011011111011101111000 .
b11011110101011011011111011101 '
b11110101011011011111011101111000 )
b11 +
b11 0
b11 4
#4000
b11101010110110111110111011110000 *
b11101010110110111110111011110000 .
b1101111010101101101111101110 (
b1101111010101101101111101110 2
b1101111010101101101111101110 '
b11101010110110111110111011110000 )
b100 +
b100 0
b100 4
#5000
b110111101010110110111110111 (
b110111101010110110111110111 2
b11010101101101111101110111100000 *
b11010101101101111101110111100000 .
b110111101010110110111110111 '
b11010101101101111101110111100000 )
b101 +
b101 0
b101 4
#6000
b11011110101011011011111011 (
b11011110101011011011111011 2
b10101011011011111011101111000000 *
b10101011011011111011101111000000 .
b11011110101011011011111011 '
b10101011011011111011101111000000 )
b110 +
b110 0
b110 4
#7000
b1101111010101101101111101 (
b1101111010101101101111101 2
b1010110110111110111011110000000 *
b1010110110111110111011110000000 .
b1101111010101101101111101 '
b1010110110111110111011110000000 )
b111 +
b111 0
b111 4
#8000
b10101101101111101110111100000000 *
b10101101101111101110111100000000 .
b110111101010110110111110 (
b110111101010110110111110 2
b110111101010110110111110 '
b10101101101111101110111100000000 )
b1000 +
b1000 0
b1000 4
#9000
b11011110101011011011111 (
b11011110101011011011111 2
b1011011011111011101111000000000 *
b1011011011111011101111000000000 .
b11011110101011011011111 '
b1011011011111011101111000000000 )
b1001 +
b1001 0
b1001 4
#10000
b1101111010101101101111 (
b1101111010101101101111 2
b10110110111110111011110000000000 *
b10110110111110111011110000000000 .
b1101111010101101101111 '
b10110110111110111011110000000000 )
b1010 +
b1010 0
b1010 4
#11000
b110111101010110110111 (
b110111101010110110111 2
b1101101111101110111100000000000 *
b1101101111101110111100000000000 .
b110111101010110110111 '
b1101101111101110111100000000000 )
b1011 +
b1011 0
b1011 4
#12000
b11011110101011011011 (
b11011110101011011011 2
b11011011111011101111000000000000 *
b11011011111011101111000000000000 .
b11011110101011011011 '
b11011011111011101111000000000000 )
b1100 +
b1100 0
b1100 4
#13000
b1101111010101101101 (
b1101111010101101101 2
b10110111110111011110000000000000 *
b10110111110111011110000000000000 .
b1101111010101101101 '
b10110111110111011110000000000000 )
b1101 +
b1101 0
b1101 4
